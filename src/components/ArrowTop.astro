---
import { getI18N } from "@/i18n";

const { currentLocale = "es" } = Astro;
const { arrowTop } = getI18N({ currentLocale });
---

<button tabindex={0} aria-label={arrowTop.label} id="scroll-button">
  <svg
    aria-hidden="true"
    fill="currentColor"
    viewBox="0 0 20 20"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z"
    ></path>
  </svg>
</button>

<script>
  const button = document.getElementById("scroll-button");

  const scrollTop = () => {
    window.scrollTo({ top: 0, behavior: "smooth" });
    const nav = document.querySelector("nav")!;
    nav.focus();
  };

  button?.addEventListener("click", scrollTop);

  window.addEventListener("scroll", (ev) => {
    console.log(button);
    if (window.scrollY > 400) {
      button?.classList.add("visible");
    } else {
      button?.classList.remove("visible");
    }
  });
</script>

<style>
  button {
    display: none;
    position: fixed;
    bottom: 2em;
    right: 2em;
    width: 3rem;
    height: 3rem;
    z-index: 50;
    border: 0;
    border-radius: 0;
    transition:
      transform 0.15s ease,
      box-shadow 0.15s ease;
    background-color: var(--light);
    color: var(--primary-200);
    box-shadow: 5px 5px 0px var(--primary-300);
    padding: 0.3em;

    &.visible {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    &:hover {
      background-color: var(--primary-100);
      color: var(--clr-dark);
    }

    &:focus {
      outline: 4px dotted var(--light);
      outline-offset: 0.5em;
    }

    &:active {
      transform: translate(5px, 5px);
      box-shadow: none;
    }

    svg {
      fill: currentColor;
      width: 100%;
      height: 100%;
    }
  }
</style>
